a {
    position: relative;
    text-decoration: none;

    &.hoverEffect {
        &::before {
            content: '';
            position: absolute;
            background: rgba($pink, 0.8);
            @include _transform($top: '',
                $left: 0,
                $bottom: 0,
                $right: '',
                $t_x: 0,
                $t_y: 1vh,
                $r_deg: 0,
                $s_x: 1,
                $s_y: 1);
            @include _dimensions($width: 0, $height: 0.35vh);
            @include _transitions($property: 'all',
                $duration: 0.25s,
                $timing: 'ease',
                $delay: ''
            );
        }

        &:hover {
            &::before {
                @include _dimensions($width: 100%, $height: 0.35vh);
            }
        }
    }
}

ul {
    margin: 0;
    padding: 0;

    li {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }
}

code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
        monospace;
}

form {
    ._formGroup {
        position: relative;
        @include _dimensions($width: '', $height: 100%);

        ._formLabel {
            position: relative;
            @include _dimensions($width: '', $height: 100%);
            @include _transitions($property: 'all',
                $duration: 0.25s,
                $timing: 'ease',
                $delay: ''
            );

            ._formControl {
                outline: none;
                box-shadow: none;
                margin: 0;
                padding: 1vh;
                min-height: unset;
                @include _dimensions($width: '', $height: 7vh);
                @include _transitions($property: 'all',
                    $duration: 0.25s,
                    $timing: 'ease',
                    $delay: ''
                );
            }

            textarea._formControl {
                resize: none;
                @include _dimensions($width: '', $height: 100%);
            }

            .form-text {
                position: absolute;
                margin: 0;
                padding: 0.5vh 1.25vh;
                font-size: x-small;
                @include _transform($top: 3.5vh,
                    $left: '',
                    $bottom: '',
                    $right: 1vh,
                    $t_x: 0,
                    $t_y: -50%,
                    $r_deg: 0,
                    $s_x: 1,
                    $s_y: 1);
                @include _transitions($property: 'all',
                    $duration: 0.25s,
                    $timing: 'ease',
                    $delay: ''
                );

                &._fieldNotEmpty {
                    @include _transform($top: '',
                        $left: '',
                        $bottom: '',
                        $right: 4vh,
                        $t_x: 0,
                        $t_y: -50%,
                        $r_deg: 0,
                        $s_x: 1,
                        $s_y: 1);
                }
            }

            .__close {
                position: absolute;
                cursor: pointer;
                border-radius: 100%;
                @include _transform($top: '',
                    $left: '',
                    $bottom: 3.5vh,
                    $right: 1vh,
                    $t_x: 0,
                    $t_y: 50%,
                    $r_deg: 0,
                    $s_x: 1,
                    $s_y: 1);
                @include _dimensions($width: 2vh, $height: 2vh);
                @include _transitions($property: 'all',
                    $duration: 0.25s,
                    $timing: 'ease',
                    $delay: ''
                );

                &._messageInput {
                    @include _transform($top: 1vh,
                        $left: '',
                        $bottom: '',
                        $right: 1vh,
                        $t_x: 0,
                        $t_y: 0,
                        $r_deg: 0,
                        $s_x: 1,
                        $s_y: 1);
                }

                &:hover {

                    &::before,
                    &::after {
                        background: rgba($black, 0.75);
                    }
                }

                &::after {
                    content: '';
                    box-sizing: border-box;
                    position: absolute;
                    display: block;
                    transform-origin: center;
                    background: rgba($black, 0.5);
                    @include _dimensions($width: 100%, $height: 0.5vh);
                    @include _transform($top: 50%,
                        $left: 50%,
                        $bottom: '',
                        $right: '',
                        $t_x: -50%,
                        $t_y: -50%,
                        $r_deg: 45deg,
                        $s_x: 1,
                        $s_y: 1);
                    @include _transitions($property: 'all',
                        $duration: 0.25s,
                        $timing: 'ease',
                        $delay: ''
                    );
                }

                &::before {
                    content: '';
                    box-sizing: border-box;
                    position: absolute;
                    display: block;
                    transform-origin: center;
                    background: rgba($black, 0.5);
                    @include _dimensions($width: 100%, $height: 0.5vh);
                    @include _transform($top: 50%,
                        $left: 50%,
                        $bottom: '',
                        $right: '',
                        $t_x: -50%,
                        $t_y: -50%,
                        $r_deg: -45deg,
                        $s_x: 1,
                        $s_y: 1);
                    @include _transitions($property: 'all',
                        $duration: 0.25s,
                        $timing: 'ease',
                        $delay: ''
                    );
                }
            }

            label {
                padding: 0 1vh;
                opacity: 0.9;
                font-size: 2vh;
                @include _transform($top: 3.5vh,
                    $left: 0.25vh,
                    $bottom: '',
                    $right: '',
                    $t_x: 0,
                    $t_y: -50%,
                    $r_deg: 0,
                    $s_x: 1,
                    $s_y: 1);
                @include _dimensions($width: unset, $height: unset);
                @include _transitions($property: 'all',
                    $duration: 0.25s,
                    $timing: 'ease',
                    $delay: ''
                );

                &::before {
                    content: '';
                    position: absolute;
                    background: $white;
                    z-index: -1;
                    @include _transform($top: 50%,
                        $left: 0,
                        $bottom: '',
                        $right: '',
                        $t_x: 0,
                        $t_y: 0,
                        $r_deg: 0,
                        $s_x: 1,
                        $s_y: 1);
                    @include _dimensions($width: 100%, $height: 50%);
                }
            }

            &>._formControl:focus~label,
            &>._formControl:not(:placeholder-shown)~label,
            &>._formControl-plaintext~label,
            &>.form-select~label {
                line-height: 2vh;
                opacity: 1;
                font-size: x-small;
                @include _transform($top: 0,
                    $left: 0.75vh,
                    $bottom: '',
                    $right: '',
                    $t_x: 0,
                    $t_y: -50%,
                    $r_deg: 0,
                    $s_x: 1,
                    $s_y: 1);
            }
        }

        /* The line at the bottom of the input */
        &::before {
            position: absolute;
            content: '';
            background: rgba($pink, 0.8);
            z-index: 1;
            @include _transform($top: 100%,
                $left: 0,
                $bottom: '',
                $right: '',
                $t_x: 0,
                $t_y: -100%,
                $r_deg: 0,
                $s_x: 1,
                $s_y: 1);
            @include _dimensions($width: 10vh, $height: 0.25vh);
            @include _transitions($property: 'all',
                $duration: 0.25s,
                $timing: 'ease',
                $delay: ''
            );
        }

        &.focused {
            &::before {
                @include _dimensions($width: 100%, $height: 0.25vh);
            }
        }

        &._checkGroup {
            &::before {
                display: none;
            }

            ._formLabel {
                ._formSwitch {
                    padding: 0;
                }

                ._formCheckbox,
                ._formSwitch {
                    @include _dimensions($width: 100%, $height: 100%);

                    input {
                        cursor: pointer;
                        margin: calc(3.5vh - 0.5em) 0;
                    }
                }

                label {
                    @include _transform($top: '',
                        $left: 3em,
                        $bottom: '',
                        $right: '',
                        $t_x: 0,
                        $t_y: -50%,
                        $r_deg: 0,
                        $s_x: 1,
                        $s_y: 1);
                }

                &Checkbox {
                    label {
                        @include _transform($top: '',
                            $left: 2em,
                            $bottom: '',
                            $right: '',
                            $t_x: 0,
                            $t_y: -50%,
                            $r_deg: 0,
                            $s_x: 1,
                            $s_y: 1);
                    }
                }

                .badge {
                    position: absolute;
                    @include _transform($top: 50%,
                        $left: '',
                        $bottom: '',
                        $right: 0,
                        $t_x: 0,
                        $t_y: -50%,
                        $r_deg: 0,
                        $s_x: 1,
                        $s_y: 1);
                }
            }
        }
    }

    .btn {
        position: relative;
        margin: 0;
        border: none;
        background: transparent !important;
        text-transform: none;
        font-size: 2vh;
        font-weight: 600;
        box-shadow: 0 0 0 0 adjust-hue($black, 45deg);
        z-index: 1;
        @include _dimensions($width: '', $height: 7vh);
        @include _transitions($property: '',
            $duration: 0.25s,
            $timing: '',
            $delay: ''
        );

        &:not(.btn-link)::before {
            content: '';
            position: absolute;
            color: $white;
            background: $black;
            @include _transitions($property: '',
                $duration: 0.25s,
                $timing: '',
                $delay: ''
            );
            @include _transform($top: 0,
                $left: 0,
                $bottom: '',
                $right: '',
                $t_x: 0,
                $t_y: 0,
                $r_deg: 0,
                $s_x: 1,
                $s_y: 1);
            @include _dimensions($width: 0, $height: 100%);
        }

        .buttonBorders {
            position: absolute;
            border: 0.1vh solid rgba($color: $white, $alpha: 0.25);
            background: none;
            @include _transform($top: 0,
                $left: 0,
                $bottom: '',
                $right: '',
                $t_x: 0,
                $t_y: 0,
                $r_deg: 0,
                $s_x: 1,
                $s_y: 1);
            @include _dimensions($width: 100%, $height: 100%);
            @include _transitions($property: '',
                $duration: 0.75s,
                $timing: ease,
                $delay: ''
            );

            .borderTop,
            .borderRight,
            .borderBottom,
            .borderLeft {
                position: absolute;
                background: $black;
            }

            .borderTop,
            .borderBottom {
                @include _dimensions($width: 100%, $height: 0.1vh);
            }

            .borderLeft,
            .borderRight {
                @include _dimensions($width: 0.1vh, $height: 100%);
            }

            .borderTop {
                transform-origin: left;
                @include _transform($top: 0,
                    $left: '',
                    $bottom: '',
                    $right: '',
                    $t_x: 0,
                    $t_y: 0,
                    $r_deg: 0,
                    $s_x: 0,
                    $s_y: 1);
                @include _transitions($property: '',
                    $duration: 0.15s,
                    $timing: ease-in-out,
                    $delay: 0.45s);
            }

            .borderRight {
                transform-origin: top;
                @include _transform($top: '',
                    $left: '',
                    $bottom: '',
                    $right: 0,
                    $t_x: 0,
                    $t_y: 0,
                    $r_deg: 0,
                    $s_x: 1,
                    $s_y: 0);
                @include _transitions($property: '',
                    $duration: 0.15s,
                    $timing: ease-in-out,
                    $delay: 0.3s);
            }

            .borderBottom {
                transform-origin: right;
                @include _transform($top: '',
                    $left: '',
                    $bottom: 0,
                    $right: '',
                    $t_x: 0,
                    $t_y: 0,
                    $r_deg: 0,
                    $s_x: 0,
                    $s_y: 1);
                @include _transitions($property: '',
                    $duration: 0.15s,
                    $timing: ease-in-out,
                    $delay: 0.15s);
            }

            .borderLeft {
                transform-origin: bottom;
                @include _transform($top: '',
                    $left: 0,
                    $bottom: '',
                    $right: '',
                    $t_x: 0,
                    $t_y: 0,
                    $r_deg: 0,
                    $s_x: 1,
                    $s_y: 0);
                @include _transitions($property: '',
                    $duration: 0.15s,
                    $timing: ease-in-out,
                    $delay: 0s);
            }
        }

        span {
            position: absolute;
            z-index: 1;
            @include _transitions($property: '',
                $duration: 0.1s,
                $timing: '',
                $delay: ''
            );
            @include _transform($top: 50%,
                $left: 50%,
                $bottom: '',
                $right: '',
                $t_x: -50%,
                $t_y: -50%,
                $r_deg: 0,
                $s_x: 1,
                $s_y: 1);
            @include _dimensions($width: max-content, $height: max-content);
        }

        &:not(.btn-link):hover {
            border: none;
            background: transparent !important;
            color: $white !important;
            box-shadow: 0 0 0 2vh transparent;

            &::before {
                @include _dimensions($width: 100%, $height: 100%);
            }

            .buttonBorders {
                border: 0.1vh solid $black !important;

                .borderTop,
                .borderRight,
                .borderBottom,
                .borderLeft {
                    background: $black;
                }
            }
        }

        &.inverse {
            color: rgba($color: $black, $alpha: 0.5);

            .buttonBorders {
                border: 0.1vh solid rgba($color: $black, $alpha: 0.5);
            }
        }

        &._red {
            color: rgba($color: $red, $alpha: 0.5);
            padding: 0;
        }

        &._danger {
            color: rgba($color: $red, $alpha: 0.5);

            .buttonBorders {
                border: 0.1vh solid rgba($color: $red, $alpha: 0.5);
            }
        }
    }

    &:hover {
        .btn {
            color: $black;

            &._red {
                color: $red;
            }

            .buttonBorders {
                border: 0.1vh solid $black;

                .borderTop,
                .borderBottom,
                .borderLeft,
                .borderRight {
                    @include _transform($top: '',
                        $left: '',
                        $bottom: '',
                        $right: '',
                        $t_x: 0,
                        $t_y: 0,
                        $r_deg: 0,
                        $s_x: 1,
                        $s_y: 1);
                }

                // when hover
                .borderTop {
                    @include _transitions($property: '',
                        $duration: 0.15s,
                        $timing: ease-in-out,
                        $delay: 0s);
                }

                .borderRight {
                    @include _transitions($property: '',
                        $duration: 0.15s,
                        $timing: ease-in-out,
                        $delay: 0.15s);
                }

                .borderBottom {
                    @include _transitions($property: '',
                        $duration: 0.15s,
                        $timing: ease-in-out,
                        $delay: 0.3s);
                }

                .borderLeft {
                    @include _transitions($property: '',
                        $duration: 0.15s,
                        $timing: ease-in-out,
                        $delay: 0.45s);
                }
            }
        }
    }
}

.card {
    @include _transitions($property: '',
        $duration: 0.75s,
        $timing: ease,
        $delay: ''
    );

    &>.borderTop,
    &>.borderRight,
    &>.borderBottom,
    &>.borderLeft {
        position: absolute;
        background: $black;
        z-index: 1;
    }

    &>.borderTop,
    &>.borderBottom {
        @include _dimensions($width: calc(100% - 4vh), $height: 2vh);
    }

    &>.borderLeft,
    &>.borderRight {
        @include _dimensions($width: 2vh, $height: calc(100% - 4vh));
    }

    &>.borderTop {
        transform-origin: left;
        @include _transform($top: 2vh,
            $left: 2vh,
            $bottom: '',
            $right: '',
            $t_x: 0,
            $t_y: 0,
            $r_deg: 0,
            $s_x: 0,
            $s_y: 1);
        @include _transitions($property: '',
            $duration: 0.15s,
            $timing: ease-in-out,
            $delay: 0.45s);
    }

    &>.borderRight {
        transform-origin: top;
        @include _transform($top: 2vh,
            $left: '',
            $bottom: '',
            $right: 2vh,
            $t_x: 0,
            $t_y: 0,
            $r_deg: 0,
            $s_x: 1,
            $s_y: 0);
        @include _transitions($property: '',
            $duration: 0.15s,
            $timing: ease-in-out,
            $delay: 0.3s);
    }

    &>.borderBottom {
        transform-origin: right;
        @include _transform($top: '',
            $left: '',
            $bottom: 2vh,
            $right: 2vh,
            $t_x: 0,
            $t_y: 0,
            $r_deg: 0,
            $s_x: 0,
            $s_y: 1);
        @include _transitions($property: '',
            $duration: 0.15s,
            $timing: ease-in-out,
            $delay: 0.15s);
    }

    &>.borderLeft {
        transform-origin: bottom;
        @include _transform($top: '',
            $left: 2vh,
            $bottom: 2vh,
            $right: '',
            $t_x: 0,
            $t_y: 0,
            $r_deg: 0,
            $s_x: 1,
            $s_y: 0);
        @include _transitions($property: '',
            $duration: 0.15s,
            $timing: ease-in-out,
            $delay: 0s);
    }

    &-body {
        box-shadow: 0 0 0 0 adjust-hue($black, 45deg);
        @include _transitions($property: '',
            $duration: 0.5s,
            $timing: '',
            $delay: ''
        );
    }

    &:hover {

        .borderTop,
        .borderBottom,
        .borderLeft,
        .borderRight {
            @include _transform($top: '',
                $left: '',
                $bottom: '',
                $right: '',
                $t_x: 0,
                $t_y: 0,
                $r_deg: 0,
                $s_x: 1,
                $s_y: 1);
        }

        // when hover
        .borderTop {
            @include _transitions($property: '',
                $duration: 0.15s,
                $timing: ease-in-out,
                $delay: 0s);
        }

        .borderRight {
            @include _transitions($property: '',
                $duration: 0.15s,
                $timing: ease-in-out,
                $delay: 0.15s);
        }

        .borderBottom {
            @include _transitions($property: '',
                $duration: 0.15s,
                $timing: ease-in-out,
                $delay: 0.3s);
        }

        .borderLeft {
            @include _transitions($property: '',
                $duration: 0.15s,
                $timing: ease-in-out,
                $delay: 0.45s);
        }

        .card-body:not(.no-shadow) {
            box-shadow: 0 0 0 2vh transparent;
        }
    }
}

.modal {
    .modal-dialog {
        border-radius: 0;

        .modal-content {
            border-radius: 0;

            .modal-header {
                padding: 4vh 4vh 2vh 4vh;
                border: 0;
                border-radius: inherit;

                .btn-close {
                    position: relative;

                    &::after {
                        content: 'ESC';
                        position: absolute;
                        color: rgba($color: $black, $alpha: 0.5);
                        font-size: x-small;
                        @include _transform($top: 100%,
                            $left: 50%,
                            $bottom: '',
                            $right: '',
                            $t_x: -50%,
                            $t_y: -25%,
                            $r_deg: 0,
                            $s_x: 1,
                            $s_y: 1);
                    }
                }
            }

            .modal-body {
                padding: 4vh;
                border: 0;
                border-radius: inherit;
            }

            .modal-footer {
                position: relative;
                padding: calc(var(--bs-modal-padding) - var(--bs-modal-footer-gap) * 0.5);
                border: 0;
                border-radius: inherit;

                svg {
                    position: absolute;
                    color: rgba($color: $pink, $alpha: 0.2);
                    @include _dimensions($width: 25%, $height: 200%);
                    @include _transform($top: 50%,
                        $left: 0,
                        $bottom: '',
                        $right: '',
                        $t_x: 0,
                        $t_y: -50%,
                        $r_deg: -30deg,
                        $s_x: 1,
                        $s_y: 1);
                }

                form {
                    @include _dimensions($width: 100%, $height: '');

                    .btn {
                        @include _dimensions($width: 25%, $height: '');
                    }
                }
            }

            &::before {
                content: '';
                position: absolute;
                background: $pink;
                @include _dimensions($width: 100%, $height: 1.5vh);
                @include _transform($top: 0,
                    $left: 0,
                    $bottom: '',
                    $right: '',
                    $t_x: 0,
                    $t_y: -100%,
                    $r_deg: 0,
                    $s_x: 1,
                    $s_y: 1);
            }
        }
    }

    &._feedbackModal {
        z-index: 1062;
    }

    &._userModal {
        z-index: 1061;

        .modal-dialog {
            @include _dimensions($width: 85%, $height: 85%);
            max-width: none;

            .modal-content {
                background: $sectionBackground;
                @include _dimensions($width: '', $height: 100%);

                form {
                    gap: 2.5vh;

                    .modal-header {
                        padding: 2vh 4vh 0 4vh;
                    }

                    .modal-body {
                        padding: 0 4vh;

                        .row {
                            .col {
                                ._formGroup {
                                    &._disabled {
                                        &::before {
                                            opacity: 0;
                                        }

                                        ._formLabel {
                                            input {
                                                background: transparent;
                                                border: 0 !important;
                                            }

                                            label {
                                                @include _transform($top: 3.5vh, $left: calc(-1vh * .15), $bottom: '', $right: '', $t_x: 0, $t_y: -50%, $r_deg: 0, $s_x: 1, $s_y: 1);
                                            }

                                            &>._formControl:focus~label,
                                            &>._formControl:not(:placeholder-shown)~label,
                                            &>._formControl-plaintext~label,
                                            &>.form-select~label {
                                                @include _transform($top: 0, $left: 0, $bottom: '', $right: '', $t_x: 0, $t_y: 0, $r_deg: 0, $s_x: .85, $s_y: .85);
                                            }
                                        }
                                    }
                                }
                            }

                            p {
                                margin: 0;
                                font-size: 1.75vh;
                                color: rgba($black, .5);
                            }

                            button {
                                @include _dimensions($width: 12.5vh, $height: '');

                                span {
                                    svg {
                                        margin: 0 0 0 1.25vh;
                                    }
                                }

                                &._edit {
                                    @include _dimensions($width: 20.5vh, $height: '');
                                }
                            }

                            &:nth-of-type(2) {
                                position: relative;

                                &::after {
                                    content: '';
                                    position: absolute;
                                    background: darken($color: $sectionBackground, $amount: 5);
                                    @include _dimensions($width: 100%, $height: .1vh);
                                    @include _transform($top: 0, $left: 0, $bottom: '', $right: '', $t_x: 0, $t_y: -4vh, $r_deg: 0, $s_x: 1, $s_y: 1);
                                }
                            }

                            &:nth-of-type(4),
                            &:nth-of-type(5) {
                                ._formGroup {
                                    ._formLabel {
                                        ._formControl {
                                            &._typing {
                                                color: transparent;
                                            }
                                        }

                                        ._autocorrect {
                                            position: absolute;
                                            padding: 1vh;
                                            @include _dimensions($width: fit-content, $height: 7vh);
                                            @include _transform($top: 0, $left: 0, $bottom: '', $right: '', $t_x: 0, $t_y: 0, $r_deg: 0, $s_x: 1, $s_y: 1);

                                            p {
                                                margin: 0;
                                                line-height: 1.25;
                                                font-size: 1rem;
                                                font-weight: 400;

                                                &._countrySuggestion,
                                                &._citySuggestion,
                                                &._permissionSuggestion {
                                                    color: $liteGray;
                                                }

                                                &._typedCharacters {
                                                    color: $black;
                                                }
                                            }
                                        }
                                    }

                                    ._SimpleBar {
                                        position: absolute;
                                        max-height: 40vh;
                                        z-index: 10;
                                        @include _dimensions($width: 100%, $height: '');

                                        .list-group {
                                            max-height: 40vh;
                                            background: $white;
                                            margin: 0;
                                            padding: 0;
                                            box-shadow: 1.25vh 1.25vh 4.5vh -2.5vh rgba($black, .5);
                                            @include _dimensions($width: 100%, $height: '');

                                            &-item {
                                                position: relative;
                                                margin: 0;
                                                padding: 1vh 2vh;
                                                font-size: .9rem;
                                                font-weight: 400;
                                                line-height: 1.25;
                                                cursor: pointer;
                                                @include _dimensions($width: 100%, $height: 5.75vh);

                                                img {
                                                    @include _dimensions($width: 7.5vh, $height: 5vh);
                                                    margin: .75vh 2.5vh .75vh 0;
                                                }

                                                &:hover {
                                                    background: $hoverGray;
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            &:nth-of-type(6) {
                                position: relative;
                                margin: 7vh 0 0 0;

                                &::before {
                                    content: '';
                                    position: absolute;
                                    background: darken($color: $sectionBackground, $amount: 5);
                                    @include _dimensions($width: 100%, $height: .1vh);
                                    @include _transform($top: 0, $left: 0, $bottom: '', $right: '', $t_x: 0, $t_y: -4vh, $r_deg: 0, $s_x: 1, $s_y: 1);
                                }
                            }

                            &._roles {
                                .col {
                                    ._formGroup {
                                        &._roleGroup {
                                            @include _dimensions($width: '', $height: 7vh);

                                            ._formLabel {¡
                                                ._formControl {
                                                    @include _transitions($property: 'all',
                                                        $duration: 0.25s,
                                                        $timing: 'ease',
                                                        $delay: ''
                                                    );
    
                                                    &._typing {
                                                        color: transparent;
                                                        @include _transitions($property: 'all',
                                                            $duration: 0.25s,
                                                            $timing: 'ease',
                                                            $delay: ''
                                                        );
                                                    }
                                                }
    
                                                ._autocorrect {
                                                    position: absolute;
                                                    padding: 0 1vh;
                                                    @include _dimensions($width: fit-content, $height: 7vh);
                                                    @include _transform($top: 0,
                                                        $left: 0,
                                                        $bottom: '',
                                                        $right: '',
                                                        $t_x: 0,
                                                        $t_y: 0,
                                                        $r_deg: 0,
                                                        $s_x: 1,
                                                        $s_y: 1);
    
                                                    p {
                                                        margin: 0;
    
                                                        &._roleSuggestion {
                                                            color: $liteGray;
                                                        }
    
                                                        &._typedCharacters {
                                                            color: $black;
                                                        }
                                                    }
                                                }
    
                                                .__selectedRoles {
                                                    position: absolute;
                                                    @include _dimensions($width: 100%, $height: 7vh);
                                                    @include _transform($top: 0,
                                                        $left: 100%,
                                                        $bottom: '',
                                                        $right: '',
                                                        $t_x: 1vh,
                                                        $t_y: 0,
                                                        $r_deg: 0,
                                                        $s_x: 1,
                                                        $s_y: 1);
    
                                                    ul {
                                                        @include _dimensions($width: '', $height: 7vh);
    
                                                        li {
                                                            position: relative;
                                                            font-size: 2vh;
                                                            font-weight: 400;
                                                            line-height: 1.25;
                                                            border-radius: .75vh;
                                                            padding: 0 3.5vh 0 1.15vh;
                                                            margin: auto 1vh auto 0;
                                                            box-shadow: 1vh 0 1vh -1vh rgba($black, 0.5);
                                                            background: $hoverGray;
                                                            @include _dimensions($width: fit-content, $height: 4.65vh);
    
                                                            p {
                                                                margin: 0;
                                                            }
    
                                                            .__close {
                                                                @include _transform($top: 50%,
                                                                    $left: '',
                                                                    $bottom: '',
                                                                    $right: .75vh,
                                                                    $t_x: 0,
                                                                    $t_y: -50%,
                                                                    $r_deg: 0,
                                                                    $s_x: 1,
                                                                    $s_y: 1);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
    
                                            .list-group {
                                                max-height: 14vh;
                                                background: $white;
                                                margin: 0;
                                                padding: 0;
                                                box-shadow: 1.25vh 1.25vh 4.5vh -2.5vh rgba($black, 0.5);
                                                @include _dimensions($width: 100%, $height: '');
    
                                                &:not(.hidden) {
                                                    min-height: 7vh;
                                                }
    
                                                &-item {
                                                    position: relative;
                                                    cursor: pointer;
                                                    font-size: 2vh;
                                                    font-weight: 400;
                                                    line-height: 1.25;
                                                    border: .15vh solid $d;
                                                    border-radius: .75vh;
                                                    background: $hoverGray;
                                                    padding: 0 .75vh;
                                                    margin: auto 0 auto 1vh;
                                                    @include _dimensions($width: fit-content, $height: 4.65vh);
    
                                                    p {
                                                        margin: 0;
                                                    }
                                                }
                                            }
                                        }

                                        ._formLabel {
                                            ._formControl {
                                                &._typing {
                                                    color: transparent;
                                                }
                                            }
    
                                            ._autocorrect {
                                                position: absolute;
                                                padding: 1vh;
                                                @include _dimensions($width: fit-content, $height: 7vh);
                                                @include _transform($top: 0,
                                                    $left: 0,
                                                    $bottom: '',
                                                    $right: '',
                                                    $t_x: 0,
                                                    $t_y: 0,
                                                    $r_deg: 0,
                                                    $s_x: 1,
                                                    $s_y: 1);
    
                                                p {
                                                    margin: 0;
    
                                                    &._roleSuggestion {
                                                        color: $liteGray;
                                                    }
    
                                                    &._typedCharacters {
                                                        color: $black;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            &:not(:nth-of-type(1)) {
                                .col {
                                    &:first-of-type {
                                        padding: 0 0 0 2.5vh;
                                    }
                                }
                            }
                        }
                    }

                    .modal-footer {
                        padding: 0 4vh 1.25vh 4vh;

                        .row {
                            .col {
                                ._formGroup {
                                    &._disabled {
                                        &::before {
                                            opacity: 0;
                                        }

                                        ._formLabel {
                                            input {
                                                background: transparent;
                                                border: 0 !important;
                                            }

                                            label {
                                                @include _transform($top: 3.5vh, $left: calc(-1vh * .15), $bottom: '', $right: '', $t_x: 0, $t_y: -50%, $r_deg: 0, $s_x: 1, $s_y: 1);
                                            }

                                            &>._formControl:focus~label,
                                            &>._formControl:not(:placeholder-shown)~label,
                                            &>._formControl-plaintext~label,
                                            &>.form-select~label {
                                                @include _transform($top: 0, $left: 0, $bottom: '', $right: '', $t_x: 0, $t_y: 0, $r_deg: 0, $s_x: .85, $s_y: .85);
                                            }
                                        }
                                    }
                                }
                            }

                            p {
                                margin: 0;
                                font-size: 1.75vh;
                                color: rgba($black, .5);
                            }

                            button {
                                @include _dimensions($width: 12.5vh, $height: '');

                                span {
                                    svg {
                                        margin: 0 0 0 1.25vh;
                                    }
                                }

                                &._edit {
                                    @include _dimensions($width: 20.5vh, $height: '');
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

.grid {
    gap: var(--bs-gap, 1vh);
}

.row {
    .col {
        padding: 0;
    }
}
